{"version":3,"sources":["astar/Cell.js","utility_components/BackButton.js","utility_components/ClearButton.js","astar/components/NavBar.js","astar/Draw.js","dijkstra/Dijkstra.js","backtracking/BackTracking.js","astar/AStar.js","backtracking/Cell.js","backtracking/components/NavBar.js","sorting/components/Graph.js","sorting/components/sortingAlgos/mergesort.js","sorting/components/sortingAlgos/quicksort.js","sorting/components/animations/mergesort_animations.js","sorting/components/animations/bubblesort_animations.js","sorting/components/animations/selectionsort_animations.js","sorting/components/animations/quicksort_animations.js","sorting/components/animations/insertionsort_animations.js","linearsearch/LinearSearch.js","binarysearch/BinarySearch.js","sorting/components/Menu.js","sorting/components/sortingAlgos/bubblesort.js","sorting/components/sortingAlgos/selectionsort.js","sorting/components/sortingAlgos/insertionsort.js","sorting/components/SortingVisualizer.js","sorting/Sorting.js","utility_components/SearchButton.js","linearsearch/NavBar.js","tsp/Point.js","utility_components/StartButton.js","tsp/NavBar.js","tsp/GeneticAlgo.js","tsp/TSP.js","App.js","index.js"],"names":["Cell","i","j","rows","cols","Object","classCallCheck","this","f","g","h","neighbours","prev","undefined","wall","Math","random","push","BackButton","onBackButtonClick","_this","props","react_default","a","createElement","onClick","className","React","Component","ClearButton","onClearButtonClick","NavBar","stage","algo","utility_components_BackButton","utility_components_ClearButton","showingCompleteGrid","p5","grid","length","breadth","start","end","x","y","fill","stroke","rect","showingOpenSet","openSet","showingclosedSet","closedSet","showingPath","path","xyz","Array","current","noSolution","solution","reLoad","flag","Dijkstra","state","componentDidUpdate","cleaning","initializeGrid","initializeStartAndEnd","componentDidMount","setup","parent","createCanvas","windowWidth","windowHeight","initializeCanvas","frameRate","windowResized","width","height","position","addNeighbours","draw","console","log","background","lowest_f_value_index","removeFromArray","_neighbours$i","slicedToArray","neighbour","includes","tempG","updateNeighbourScore","lowestIndex","mousePressed","e","mouseX","mouseY","floor","setState","array","element","splice","components_NavBar","build_default","visited","walls","next","stack","BackTracking","canvasParentRef","cell","showGrid","noStroke","checkNeighbours","removeWalls","pop","noFill","strokeWeight","line","top","index","right","bottom","left","backtracking_components_NavBar","AStar","heuristic","sqrt","Graph","graph","map","num","id","key","style","backgroundColor","concat","getMergeSortAnimations","animations","auxArray","slice","mergesort","mid","k","merge","getQuickSortAnimations","quicksort","pIndex","temp","pivot","partition","randomisedPartition","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","animateMergeSort","arrayBars","document","getElementsByClassName","_loop","_animations$i","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","_animations$i2","newHeight","lo","hi","Menu","generateNewArray","onGenerateNewArray","_callee","_regeneratorRuntime","wrap","_context","disablingButtons","stop","bubblesort","decider","animateBubbleSort","n","getBubbleSortAnimations","selectionsort","animateSelectionSort","maxi","getSelectionSortAnimations","insertionsort","animateInsertionSort","getInsertionSortAnimations","animateQuickSort","getElementById","disabled","class","SortingVisualizer","components_Menu","components_Graph","Sorting","resetArray","components_SortingVisualizer","SearchButton","onSearchButtonClick","placeholder","utility_components_SearchButton","found","LinearSearch","showArray","textSize","text","value","linearsearch_NavBar","BinarySearch","sort","b","Point","r","StartButton","onStartButtonClick","utility_components_StartButton","shuffle","order","calcDist","points","sum","x1","y1","getOne","list","prob","crossOver","order1","order2","newOrder","Infinity","idx","mutate","mutationRate","indexA","swap","bestFitness","bestPath","complete","population","fitness","populationSize","TSP","initializePopulation","prevWidth","prevHeight","showFinalPath","noCursor","ellipse","showPoints","d","totalFitness","normalizeFitness","calcFitness","currentBestIndex","best","getCurrentBest","currentBestFitness","currentBestPath","showLines","newPopulation","nextGeneration","calcPathDistance","dist","beginShape","vertex","endShape","tsp_NavBar","App","option","_this2","dijkstra_Dijkstra","backtracking_BackTracking","astar_AStar","sorting_Sorting","linearsearch_LinearSearch","binarysearch_BinarySearch","tsp_TSP","ReactDOM","render","src_App","querySelector"],"mappings":"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","file":"static/js/main.7841162e.chunk.js","sourcesContent":["class Cell{\n    constructor(i, j, rows, cols){\n        this.f = 0;\n        this.g = 0;\n        this.h = 0;\n        this.i = i;\n        this.j = j;\n        this.rows = rows;\n        this.cols = cols;\n        this.neighbours = [];\n        this.prev = undefined;\n        this.wall = false;\n        if(Math.random(1) < 0.4)\n            this.wall = true;\n    }\n    addNeighbours(){\n        let i = this.i;\n        let j = this.j;\n        let rows = this.rows;\n        let cols = this.cols;\n        if(i > 0)\n            this.neighbours.push([i-1, j]);\n        if(i < cols-1)\n            this.neighbours.push([i+1, j]);\n        if(j > 0)\n            this.neighbours.push([i, j-1]);\n        if(j < rows-1)\n            this.neighbours.push([i, j+1]);\n        if(i > 0 && j > 0)\n            this.neighbours.push([i-1, j-1]);\n        if(i > 0 && j < rows - 1)\n            this.neighbours.push([i-1, j+1]);\n        if(i < cols- 1 && j > 0)\n            this.neighbours.push([i+1, j-1]);\n        if(i < cols-1 && j < rows-1)\n            this.neighbours.push([i+1, j+1]);\n    }\n}\n\nexport default Cell;","import React from \"react\";\n\nclass BackButton extends React.Component {\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onBackButtonClick} className=\"btn btn-primary mx-2\">Back</button>;\n  }\n}\n\nexport default BackButton;\n","import React from \"react\";\n\nclass ClearButton extends React.Component {\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onClearButtonClick} className=\"btn btn-primary mx-2\">Clear</button>;\n  }\n}\n\nexport default ClearButton;\n","import React from \"react\";\nimport BackButton from \"../../utility_components/BackButton\";\nimport ClearButton from \"../../utility_components/ClearButton\";\n\n\nclass NavBar extends React.Component {\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  }\n\n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div>\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          Click where you want to start from\n        </div>\n      );\n    }\n    if (this.props.stage === 1) {\n      return (\n        <div>\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          Click where you want to end\n        </div>\n      );\n    }\n\n    if (this.props.stage === 2) {\n        return (\n          <div>\n            <h2>{this.props.algo}</h2>\n            <BackButton onBackButtonClick={this.onBackButtonClick}/>\n            <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          </div>\n        );\n      }\n  }\n}\n\nexport default NavBar;\n","export function showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end){\n    for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          let x = i * length;\n          let y = j * breadth;\n          p5.fill(255);\n          p5.stroke(0);\n          if (grid[i][j].wall) {\n            p5.fill(0);\n          }\n          if (grid[i][j] === start) {\n            p5.fill(233, 222, 21);\n          }\n          if (grid[i][j] === end) {\n            p5.fill(228, 31, 4);\n          }\n          p5.rect(x, y, length, breadth);\n        }\n      }\n}\n\nexport function showingOpenSet(p5, openSet, length, breadth, start, end){\n    for (let i = 0; i < openSet.length; i++) {\n        let x = openSet[i].i;\n        let y = openSet[i].j;\n        x = x * length;\n        y = y * breadth;\n        p5.fill(139, 237, 151);\n        p5.stroke(0);\n        if (openSet[i] === start) {\n          p5.fill(233, 222, 21);\n        }\n        if (openSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n        p5.rect(x, y, length, breadth);\n      }\n}\n\nexport function showingclosedSet(p5, closedSet, length, breadth, start, end){\n    for (let i = 0; i < closedSet.length; i++) {\n        let x = closedSet[i].i;\n        let y = closedSet[i].j;\n        x = x * length;\n        y = y * breadth;\n        p5.fill(4, 228, 226);\n        p5.stroke(0);\n        if (closedSet[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (closedSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n        p5.rect(x, y, length, breadth);\n      }\n}\n\nexport function showingPath(p5, path, length, breadth, start, end){\n    for (let i = 0; i < path.length; i++) {\n      let x = path[i].i;\n      let y = path[i].j;\n      x = x * length;\n      y = y * breadth;\n      p5.fill(0, 0, 255);\n      p5.stroke(0);\n      if (path[i] === start) {\n        p5.fill(233, 222, 21);\n      } else if (path[i] === end) {\n        p5.fill(228, 31, 4);\n      }\n      p5.rect(x, y, length, breadth);\n    }\n  }","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"../astar/Cell\";\nimport NavBar from \"../astar/components/NavBar\";\nimport {\n  showingCompleteGrid,\n  showingOpenSet,\n  showingclosedSet,\n  showingPath,\n} from \"../astar/Draw\";\n\nlet cols = 25,\n  rows = 11;\nlet length, breadth;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n  end = null,\n  current = null;\nlet noSolution = false,\n  solution = false;\nlet path = [];\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass Dijkstra extends React.Component {\n  state = { start: null, end: null, stage: 0 };\n\n  componentDidUpdate = () => {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    this.initializeStartAndEnd();\n  };\n\n  componentDidMount = () => {\n    this.initializeGrid();\n    this.initializeStartAndEnd();\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\n      .parent(parent);\n    this.initializeCanvas(p5);\n    p5.frameRate(7);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution || noSolution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Cell(i, j, rows, cols);\n        grid[i][j].addNeighbours();\n      }\n    }\n  };\n\n  initializeStartAndEnd = () => {\n    start = this.state.start;\n    end = this.state.end;\n    if (start) openSet.push(start);\n  };\n\n  draw = (p5) => {\n    console.log(\"draw\");\n    if(flag === true){\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n      showingPath(p5, path, length, breadth, start, end);\n    }\n    if (!noSolution && !solution) {\n      p5.background(0);\n      if (start && end) {\n        if (openSet.length > 0) {\n          current = openSet[this.lowest_f_value_index()];\n          if (current === end) {\n            solution = true;\n          }\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n\n          let neighbours = current.neighbours;\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  this.updateNeighbourScore(neighbour, tempG);\n                }\n              } else {\n                openSet.push(neighbour);\n                this.updateNeighbourScore(neighbour, tempG);\n              }\n            }\n          }\n        } else if (!solution) {\n          noSolution = true;\n        }\n      }\n\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      showingPath(p5, path, length, breadth, start, end);\n    }\n\n    if (noSolution) {\n      console.log(\"No Solution\");\n    }\n  };\n\n  updateNeighbourScore = (neighbour, tempG) => {\n    neighbour.g = tempG;\n    neighbour.prev = current;\n    neighbour.f = neighbour.g + neighbour.h;\n  };\n\n  lowest_f_value_index = () => {\n    let lowestIndex = 0;\n    for (let i = 0; i < openSet.length; i++) {\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n    }\n    return lowestIndex;\n  };\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\n    }\n  };\n\n  cleaning = () => {\n    openSet = [];\n    closedSet = [];\n    path = [];\n    current = null;\n    reLoad = false;\n    noSolution = false;\n    solution = false;\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, end: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Dijkstra\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dijkstra;","import React from \"react\";\nimport Cell from \"./Cell\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./components/NavBar\";\n\nlet length, breadth;\nlet rows = 11, cols = 25;\nlet grid = [];\nlet current = null,\n  next = null,\n  start = null;\nlet stack = [];\nlet reLoad = false;\nlet solution = false;\nlet flag = true;\nlet xyz;\n\nclass BackTracking extends React.Component {\n  state = { start: null, stage: 0 };\n\n  componentDidMount() {\n    grid = [];\n    this.initializeGrid();\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  setup = (p5, canvasParentRef) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8).parent(canvasParentRef);\n    p5.frameRate(15);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        let cell = new Cell(i, j);\n        grid.push(cell);\n      }\n    }\n  };\n\n  draw = (p5) => {\n    if(flag === true){\n      this.showGrid(p5);\n    }\n    if (!solution) {\n      p5.background(0);\n      this.showGrid(p5);\n      if (current) {\n        current.visited = true;\n        p5.noStroke();\n        p5.fill(21, 42, 233);\n        p5.rect(current.i * length, current.j * breadth, length, breadth);\n        next = this.checkNeighbours();\n        if (next) {\n          stack.push(current);\n          this.removeWalls();\n          current = next;\n        } else if (stack.length > 0) {\n          current = stack.pop();\n        } else {\n          solution = true;\n        }\n      }\n    }\n  };\n\n  showGrid = (p5) => {\n    for (let i = 0; i < grid.length; i++) {\n      let x = grid[i].i;\n      let y = grid[i].j;\n      x = x * length;\n      y = y * breadth;\n      p5.noFill();\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      if (grid[i].walls[0]) {\n        p5.line(x, y, x + length, y);\n      }\n      if (grid[i].walls[1]) {\n        p5.line(x + length, y, x + length, y + breadth);\n      }\n      if (grid[i].walls[2]) {\n        p5.line(x + length, y + breadth, x, y + breadth);\n      }\n      if (grid[i].walls[3]) {\n        p5.line(x, y + breadth, x, y);\n      }\n      if (start === grid[i]) {\n        p5.noStroke();\n        p5.fill(255, 0, 0);\n        p5.rect(x, y, length, breadth);\n      } else if (grid[i].visited) {\n        p5.noStroke();\n        p5.fill(46, 240, 113);\n        p5.rect(x, y, length+1, breadth+1);\n      }\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows) {\n      if (!this.state.start)\n        this.setState({ start: grid[j * cols + i], stage: 1 });\n    }\n  };\n\n  checkNeighbours = () => {\n    const i = current.i;\n    const j = current.j;\n    let neighbours = [];\n    let top = grid[this.index(i, j - 1)];\n    let right = grid[this.index(i + 1, j)];\n    let bottom = grid[this.index(i, j + 1)];\n    let left = grid[this.index(i - 1, j)];\n    if (top && !top.visited) neighbours.push(top);\n    if (right && !right.visited) neighbours.push(right);\n    if (bottom && !bottom.visited) neighbours.push(bottom);\n    if (left && !left.visited) neighbours.push(left);\n    if (neighbours.length > 0) {\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\n    } else return undefined;\n  };\n\n  removeWalls = () => {\n    let x = current.i - next.i;\n    let y = current.j - next.j;\n    if (x < 0) {\n      current.walls[1] = false;\n      next.walls[3] = false;\n    } else if (x > 0) {\n      current.walls[3] = false;\n      next.walls[1] = false;\n    } else if (y > 0) {\n      current.walls[0] = false;\n      next.walls[2] = false;\n    } else if (y < 0) {\n      current.walls[2] = false;\n      next.walls[0] = false;\n    }\n  };\n\n  index = (i, j) => {\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n    return j * cols + i;\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  cleaning = () => {\n    grid = [];\n    current = null;\n    next = null;\n    start = null;\n    stack = [];\n    reLoad = false;\n    solution = false;\n  }\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"BackTracking\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackTracking;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"./Cell\";\nimport NavBar from \"./components/NavBar\";\nimport {\n  showingCompleteGrid,\n  showingOpenSet,\n  showingclosedSet,\n  showingPath,\n} from \"./Draw\";\n\nlet cols = 25,\n  rows = 11;\nlet length, breadth;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n  end = null,\n  current = null;\nlet noSolution = false,\n  solution = false;\nlet path = [];\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass AStar extends React.Component {\n  state = { start: null, end: null, stage: 0 };\n\n  componentDidUpdate = () => {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    this.initializeStartAndEnd();\n  };\n\n  componentDidMount = () => {\n    this.initializeGrid();\n    this.initializeStartAndEnd();\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\n      .parent(parent);\n    this.initializeCanvas(p5);\n    p5.frameRate(5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution || noSolution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Cell(i, j, rows, cols);\n        grid[i][j].addNeighbours();\n      }\n    }\n  };\n\n  initializeStartAndEnd = () => {\n    start = this.state.start;\n    end = this.state.end;\n    if (start) openSet.push(start);\n  };\n\n  draw = (p5) => {\n    if(flag === true){\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n      showingPath(p5, path, length, breadth, start, end);\n    }\n    if (!noSolution && !solution) {\n      p5.background(0);\n      if (start && end) {\n        if (openSet.length > 0) {\n          current = openSet[this.lowest_f_value_index()];\n          if (current === end) {\n            solution = true;\n          }\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n\n          let neighbours = current.neighbours;\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  this.updateNeighbourScore(neighbour, tempG);\n                }\n              } else {\n                openSet.push(neighbour);\n                this.updateNeighbourScore(neighbour, tempG);\n              }\n            }\n          }\n        } else if (!solution) {\n          noSolution = true;\n        }\n      }\n\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      showingPath(p5, path, length, breadth, start, end);\n    }\n\n    if (noSolution) {\n      console.log(\"No Solution\");\n    }\n  };\n\n  updateNeighbourScore = (neighbour, tempG) => {\n    neighbour.g = tempG;\n    neighbour.prev = current;\n    neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n    neighbour.f = neighbour.g + neighbour.h;\n  };\n\n  lowest_f_value_index = () => {\n    let lowestIndex = 0;\n    for (let i = 0; i < openSet.length; i++) {\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n    }\n    return lowestIndex;\n  };\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\n    }\n  };\n\n  cleaning = () => {\n    openSet = [];\n    closedSet = [];\n    path = [];\n    current = null;\n    reLoad = false;\n    noSolution = false;\n    solution = false;\n  };\n\n  heuristic(i, j) {\n    let x = this.state.end.i - i;\n    let y = this.state.end.j - j;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, end: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"A*\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AStar;","class Cell{\n    constructor(i, j){\n        this.i=i;\n        this.j=j;\n        this.visited = false;\n        this.walls = [true, true, true, true];\n    }\n}\n\nexport default Cell;","import React from \"react\";\nimport BackButton from \"../../utility_components/BackButton\";\nimport ClearButton from \"../../utility_components/ClearButton\";\n\nclass NavBar extends React.Component {\n    onBackButtonClick = () => {\n        this.props.onBackButtonClick();\n      }\n    \n      onClearButtonClick = () => {\n        this.props.onClearButtonClick();\n      }\n    \n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div>\n          <h2>BackTracking</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\n          Click from where you want to start\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>BackTracking</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default NavBar;\n","import React from 'react'\nimport '../css/graph.css'\n\nconst PRIMARY_COLOR = 'turquoise';\n\nconst Graph = (props) => {\n\n    const graph = props.array.map((num, id) => {\n        return <div key={id} className=\"array-bar\"  style={{\n            backgroundColor: PRIMARY_COLOR,\n            height: `${num}px`,\n          }}></div>\n    });\n\n    return (\n        <div className=\"array-container\"> \n            {graph}\n        </div>\n    );\n}\n\nexport default Graph;","export function getMergeSortAnimations(array){\n  const animations = [];\n  const auxArray = array.slice();\n  mergesort(array, 0, array.length-1, auxArray, animations);\n  return animations;\n}\n\nfunction mergesort(array, start, end, auxArray, animations){\n  if(start === end)\n    return;\n  const mid = Math.floor((start + end)/2);\n  mergesort(auxArray, start, mid, array, animations);\n  mergesort(auxArray, mid+1, end, array, animations);\n  merge(array, start, end, auxArray, animations);\n}\n\nfunction merge(array, start, end, auxArray, animations){\n  const mid = Math.floor((start+end)/2);\n  let i = start, j = mid+1, k = start;\n  while(i <= mid && j <= end){\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if(auxArray[i] <= auxArray[j]){\n      animations.push([k, auxArray[i]]);\n      array[k++] = auxArray[i++];\n    }\n    else{  \n      animations.push([k, auxArray[j]]);\n      array[k++] = auxArray[j++];\n    }\n  }\n  while(i <= mid){\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxArray[i]]);\n    array[k++] = auxArray[i++];\n  }\n  while(j <= end){\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxArray[j]]);\n    array[k++] = auxArray[j++];\n  }\n}","export function getQuickSortAnimations(array){\n    const animations = [];\n    quicksort(array, 0, array.length - 1, animations);\n    return animations;\n}\n\nfunction quicksort(array, start, end, animations){\n    if(start < end){\n        const pIndex = randomisedPartition(array, start, end, animations);\n        quicksort(array, start, pIndex-1, animations);\n        quicksort(array, pIndex+1, end, animations);\n    }\n}\n\nfunction randomisedPartition(array, start, end, animations){\n    const k = Math.floor(Math.random() * (end-start+1)) + start;\n    animations.push([k, array[end]]);\n    animations.push([end, array[k]]);\n    let temp = array[k];\n    array[k] = array[end];\n    array[end] = temp;\n    return partition(array, start, end, animations);\n}\n\nfunction partition(array, start, end, animations){\n    let pivot = array[end];\n    let pIndex = start;\n    for(let i = start ; i < end ; i++){\n        if(array[i] < pivot){\n            animations.push([i, array[pIndex]]);\n            animations.push([pIndex, array[i]]);\n            let temp = array[i];\n            array[i] = array[pIndex];\n            array[pIndex] = temp;\n            pIndex++;\n        }\n    }\n    animations.push([end, array[pIndex]]);\n    animations.push([pIndex, array[end]]);\n    array[end] = array[pIndex];\n    array[pIndex] = pivot;\n    return pIndex;\n}","const ANIMATION_SPEED_MS = 10;\nconst PRIMARY_COLOR = \"turquoise\";\nconst SECONDARY_COLOR = \"red\";\n\nexport function animateMergeSort(animations) {\n  const arrayBars = document.getElementsByClassName(\"array-bar\");\n  for ( let i = 0 ; i < animations.length; i++) {\n    const isColorChange = i % 3 !== 2;\n    if (isColorChange) {\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOneStyle = arrayBars[barOneIdx].style;\n      const barTwoStyle = arrayBars[barTwoIdx].style;\n      const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n      setTimeout(() => {\n        barOneStyle.backgroundColor = color;\n        barTwoStyle.backgroundColor = color;\n      }, i * ANIMATION_SPEED_MS);\n    } else {\n      setTimeout(() => {\n        const [barOneIdx, newHeight] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        barOneStyle.height = `${newHeight}px`;\n      }, i * ANIMATION_SPEED_MS);\n    }\n  }\n}\n","const ANIMATION_SPEED_MS = 2;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateBubbleSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ; i < animations.length ; i++){\n        const [barOneIdx, barTwoIdx, decider] = animations[i];\n        if(decider === 0){\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = SECONDARY_COLOR;\n              barTwoStyle.backgroundColor = SECONDARY_COLOR;\n            }, i * ANIMATION_SPEED_MS);\n        }\n        else if(decider === 2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n            barTwoStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else{\n            const newHeight = barTwoIdx;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            setTimeout(() => {\n              barOneStyle.backgroundColor= 'blue';\n              barOneStyle.height = `${newHeight}px`;\n              barOneStyle.backgroundColor = PRIMARY_COLOR;\n            }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","const ANIMATION_SPEED_MS = 1;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateSelectionSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        if(newHeight === -1){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else if(newHeight === -2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        } \n        else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","const ANIMATION_SPEED_MS = 10;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateQuickSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        // if(newHeight === -1){\n        //   const barOneStyle = arrayBars[barOneIdx].style;\n        //   setTimeout(() => {\n        //     barOneStyle.backgroundColor = SECONDARY_COLOR;\n        //   }, i*ANIMATION_SPEED_MS);\n        // }\n        // else if(newHeight === -2){\n        //   const barOneStyle = arrayBars[barOneIdx].style;\n        //   setTimeout(() => {\n        //     barOneStyle.backgroundColor = PRIMARY_COLOR;\n        //   }, i*ANIMATION_SPEED_MS);\n        // } \n        // else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        // }\n      }\n}","const ANIMATION_SPEED_MS = 2;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateInsertionSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        if(newHeight === -1){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else if(newHeight === -2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        } \n        else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./NavBar\";\n\nlet array = [];\nlet visited = [];\nlet n = 30;\nlet length, breadth;\nlet key = null;\nlet index = 0;\nlet found = false;\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass LinearSearch extends React.Component {\n  state = { key: null, stage: 0 };\n \n  componentDidMount() {\n    this.resetArray();\n    key = this.state.key;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n        this.resetArray();\n        reLoad = false;\n    }\n    key = this.state.key;\n  }\n\n  resetArray() {\n    for (let i = 0; i < n; i++) {\n      array.push(Math.floor(Math.random() * 100 + 1));\n    }\n    for (let i = 0; i < n; i++) {\n      visited.push(false);\n    }\n  }\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\n    p5.frameRate(5);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\n    this.initializeCanvas(p5);\n    if(found){\n      flag = true;\n    }\n  }\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) / 2;\n    xyz.position(x, y);\n    length = p5.width / n;\n    breadth = p5.height * 0.9;\n    console.log(length);\n    console.log(breadth);\n  };\n\n  draw = (p5) => {\n    if(flag){\n      this.showArray(p5);\n\n    }\n    if (!found && (index < n+1)) {\n      p5.background(255);\n      this.showArray(p5);\n      if (key) {\n        if (index !== -1) {\n          if (array[index] == key) {\n            p5.fill(255, 0, 0);\n            visited[index] = true;\n            found = true;\n          } else {\n            visited[index] = true;\n            p5.fill(0, 255, 0);\n          }\n        }\n        p5.rect(index * length, 0, length, breadth);\n        p5.fill(0);\n        p5.textSize((length + breadth) / 6);\n        p5.text(array[index], index * length + (6 * length) / 24, (15 * breadth) / 24);\n        index = index + 1;\n      }\n    }\n    else if(index == 21 && !found){\n      console.log(\"Not found\");\n      found = true;\n    }\n  };\n\n  showArray = (p5) => {\n    for (let i = 0; i < n; i++) {\n      if (!visited[i]) {\n        p5.fill(4, 228, 221);\n      }\n      else if(flag && array[i] == key){\n        console.log(1);\n        p5.fill(255, 0, 0);\n      }\n      else {\n        p5.fill(0, 0, 255);\n      }\n      p5.stroke(0);\n      p5.rect(i * length, 0, length, breadth);\n      p5.fill(0);\n      p5.textSize((length + breadth) / 6);\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\n    }\n\n  }\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    reLoad = true;\n    this.setState({key : null, stage : 0});\n  };\n\n  cleaning = () => {\n    array = [];\n    visited = [];\n    index = 0;\n    found = false;\n  }\n\n  onSearchButtonClick = () => {\n    let n = document.getElementById(\"key\").value;\n    if(this.state.key === null){\n      this.setState({key : n, stage : 1});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Linear Search\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onSearchButtonClick = {this.onSearchButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LinearSearch;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"../linearsearch/NavBar\";\n\nlet array = [];\nlet n = 30;\nlet length, breadth;\nlet key = null;\nlet found = false;\nlet reLoad = false;\nlet lo, hi, mid;\nlet xyz;\nlet flag = false;\n\nclass BinarySearch extends React.Component {\n  state = { key: null, stage: 0 };\n\n  componentDidMount() {\n    lo = 0;\n    hi = n - 1;\n    this.resetArray();\n    key = this.state.key;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      reLoad = false;\n      this.resetArray();\n    }\n    key = this.state.key;\n  }\n\n  resetArray() {\n    for (let i = 0; i < n; i++) {\n      array.push(Math.floor(Math.random() * 100 + 1));\n      array.sort((a, b) => a - b);\n    }\n    key = array[Math.floor(Math.random() * 19)];\n  }\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\n    p5.frameRate(5);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\n    this.initializeCanvas(p5);\n    if(found){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) / 2;\n    xyz.position(x, y);\n    length = p5.width / n;\n    breadth = p5.height * 0.9;\n  };\n\n  draw = (p5) => {\n    if(flag == true){\n      this.showArray(p5);\n    }\n    if (!found && lo <= hi) {\n      p5.background(255);\n      this.showArray(p5);\n      if (key) {\n        mid = Math.floor((lo + hi) / 2);\n        if (array[mid] == key) {\n          found = true;\n          p5.fill(255, 0, 0);\n          p5.rect(mid * length, 0, length, breadth);\n          p5.fill(0);\n          p5.textSize((length + breadth) / 6);\n          p5.text(array[mid], mid * length + (9 * length) / 24, (7 * breadth) / 12);\n        } else if (array[mid] > key) {\n          hi = mid - 1;\n        } else if (array[mid] < key) {\n          lo = mid + 1;\n        }\n      }\n    }\n    else if(!found){\n      console.log(\"Not Found\");\n      this.showArray(p5);\n    }\n  };\n\n  showArray = (p5) => {\n    for (let i = 0; i < n; i++) {\n      if(array[i] == key){\n        p5.fill(255, 0, 0);\n      }\n      else if(i >= lo && i <= hi) {\n        p5.fill(0, 255, 0);\n      } else{\n        p5.fill(255);\n      }\n      p5.stroke(0);\n      p5.rect(i * length, 0, length, breadth);\n      p5.fill(0);\n      p5.textSize((length + breadth) / 6);\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\n    }\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    reLoad = true;\n    this.setState({ key: null, stage: 0 });\n  };\n\n  cleaning = () => {\n    array = [];\n    lo = 0;\n    hi = n - 1;\n    found = false;\n  }\n\n  onSearchButtonClick = () => {\n    let n = document.getElementById(\"key\").value;\n    console.log(n);\n    if(this.state.key === null){\n      this.setState({key : n, stage : 1});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Binary Search\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onSearchButtonClick = {this.onSearchButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BinarySearch;","import React from 'react';\nimport { getMergeSortAnimations } from \"./sortingAlgos/mergesort\";\nimport { getBubbleSortAnimations } from \"./sortingAlgos/bubblesort\";\nimport { getSelectionSortAnimations } from \"./sortingAlgos/selectionsort\";\nimport { getInsertionSortAnimations } from \"./sortingAlgos/insertionsort\";\nimport { getQuickSortAnimations } from \"./sortingAlgos/quicksort\";\nimport { animateMergeSort } from \"./animations/mergesort_animations\";\nimport { animateBubbleSort } from \"./animations/bubblesort_animations\";\nimport { animateSelectionSort } from \"./animations/selectionsort_animations\";\nimport { animateQuickSort } from \"./animations/quicksort_animations\";\nimport { animateInsertionSort } from \"./animations/insertionsort_animations\";\nimport BackButton from '../../utility_components/BackButton';\nimport \"../css/button.css\";\n\nclass Menu extends React.Component{\n\n    generateNewArray = () => {\n        this.props.onGenerateNewArray();\n      };\n    \n      mergesort = async () => {\n        this.disablingButtons();\n        const animations = getMergeSortAnimations(this.props.array);\n        animateMergeSort(animations);\n      };\n\n      bubblesort = () => {\n        this.disablingButtons();\n        const animations = getBubbleSortAnimations(this.props.array);\n        animateBubbleSort(animations);\n      };\n     \n      selectionsort = () => {\n        this.disablingButtons();\n        const animations = getSelectionSortAnimations(this.props.array);\n        animateSelectionSort(animations);\n      };\n    \n      insertionsort = () => {\n        this.disablingButtons();\n        const animations = getInsertionSortAnimations(this.props.array);\n        animateInsertionSort(animations);\n      };\n    \n      quicksort = () => {\n        this.disablingButtons();\n        const animations = getQuickSortAnimations(this.props.array);\n        animateQuickSort(animations);\n      };\n\n      onBackButtonClick = () => {\n          this.props.onBackButtonClick();\n      }\n\n      onClearButtonClick = () => {\n        document.getElementById(\"bs\").disabled = false;\n      }\n\n      disablingButtons = () => {\n        document.getElementById(\"ms\").disabled = true;\n        document.getElementById(\"bs\").disabled = true;\n        document.getElementById(\"ss\").disabled = true;\n        document.getElementById(\"is\").disabled = true;\n        document.getElementById(\"qs\").disabled = true;\n        document.getElementById(\"gnw\").disabled = true;\n      }\n      \n    render(){\n        return (\n          <div className=\"container mt-3\">\n            <button onClick={this.generateNewArray} className=\"btn btn-primary\" id=\"gnw\">Generate Array</button>\n            <BackButton onBackButtonClick={this.onBackButtonClick}/>\n            <button class=\"b btn btn-outline-secondary\" id=\"ms\" onClick={this.mergesort}>MergeSort</button>\n            <button class=\"c btn btn-outline-success\" id=\"bs\" onClick={this.bubblesort}>BubbleSort</button>\n            <button class=\"d btn btn-outline-warning\" id=\"ss\" onClick={this.selectionsort}>SelectionSort</button>\n            <button class=\"e btn btn-outline-danger\" id=\"is\" onClick={this.insertionsort}>InsertionSort</button>\n            <button class=\"f btn btn-outline-info\" id=\"qs\" onClick={this.quicksort}>QuickSort</button>\n          </div>\n        );\n    }\n}\n\nexport default Menu;","export function getBubbleSortAnimations(array){\n    const animations = [];\n    bubblesort(array, animations);\n    return animations;\n}\n\nfunction bubblesort(array, animations){\n    const n = array.length - 1;\n    for(let i = 0 ;  i < n ; i++){\n        for(let j = 0 ; j < n - i ; j++){\n            animations.push([j, j+1, 0]);\n            animations.push([j, j+1, 2]);\n            if(array[j] > array[j+1]){\n                animations.push([j, array[j+1], 1]);\n                animations.push([j+1, array[j], 1]);\n                let temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n}","export function getSelectionSortAnimations(array){\n    const animations = [];\n    selectionsort(array, animations);\n    return animations;\n}\n\nfunction selectionsort(array, animations){\n    const n = array.length;\n    for(let i = 0 ; i < n-1 ; i++){\n        let maxi = array[0], k = 0;\n        for(let j = 0 ;  j < n-i ; j++){\n            animations.push([j, -1]);\n            animations.push([j, -2]);\n            if(maxi < array[j]){\n                maxi = array[j];\n                k = j;\n            }\n        }\n        animations.push([k, array[n-i-1]]);\n        animations.push([n-i-1, array[k]]);\n        let temp = array[k];\n        array[k] = array[n-i-1];\n        array[n-i-1] = temp;\n    }\n}","export function getInsertionSortAnimations(array){\n    const animations = [];\n    insertionsort(array, animations);\n    return animations;\n}\n\nfunction insertionsort(array, animations){\n    const n = array.length - 1;\n    for(let i = 1 ; i <= n ; i++){\n        animations.push([i, -1]);\n        animations.push([i, -2]);\n        let temp = array[i], j = i-1;\n        for( ; j >= 0 ; j--){\n            animations.push([j, -1]);\n            animations.push([j, -2]);\n            if(array[j] > temp){\n                animations.push([j+1, array[j]]);\n                array[j+1] = array[j];\n            }\n            else\n                break;\n        }\n        animations.push([j+1, temp]);\n        array[j+1] = temp;\n    }\n}","import React from \"react\";\nimport Graph from \"./Graph\";\nimport Menu from \"./Menu\";\n\nclass SortingVisualizer extends React.Component {\n  generateNewArray = () => {\n    this.props.onGenerateNewArray();\n  };\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Menu\n          array={this.props.array}\n          onGenerateNewArray={this.generateNewArray}\n          onBackButtonClick={this.onBackButtonClick}\n        />\n        <Graph array={this.props.array} />\n      </div>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nimport \"./css/app.css\";\n\nclass Sorting extends React.Component {\n  \n  state = { array: [] };\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray = () => {\n    const array = [];\n    for (let i = 0; i < 100; i++) {\n      array.push(Math.floor(Math.random() * 300) + 20);\n    }\n    this.setState({ array });\n  };\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SortingVisualizer\n          array={this.state.array}\n          onGenerateNewArray={this.resetArray}\n          onBackButtonClick={this.onBackButtonClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Sorting;\n","import React from \"react\";\n\nclass SearchButton extends React.Component {\n  onSearchButtonClick = () => {\n    this.props.onSearchButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onSearchButtonClick} className=\"btn btn-primary m-2\">Search</button>;\n  }\n}\n\nexport default SearchButton;\n","import React from \"react\";\nimport BackButton from \"../utility_components/BackButton\";\nimport ClearButton from \"../utility_components/ClearButton\";\nimport SearchButton from \"../utility_components/SearchButton\";\n\n\nclass NavBar extends React.Component {\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  }\n\n  onSearchButtonClick = () => {\n    this.props.onSearchButtonClick();\n  }\n\n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div className=\"mt-3\">\n          <h2>{this.props.algo}</h2>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n          <input id=\"key\" className=\"form-control\" placeholder=\"Enter the element you want to search\"></input>\n          <SearchButton onSearchButtonClick={this.onSearchButtonClick} />\n          </div>\n          <div className=\"col-md-4\">\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          </div>\n        </div>\n        </div>\n      );\n    }\n    if (this.props.stage === 1) {\n      return (\n        <div className=\"mt-3\">\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default NavBar;\n","class Point{\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n        // this.r = Math.floor(Math.random(1)*255);\n        // this.g = Math.floor(Math.random(1)*255);\n        // this.b = Math.floor(Math.random(1)*255);\n        this.r = 255;\n        this.g = 255;\n        this.b = 255;\n    }\n}\n\nexport default Point;","import React from \"react\";\n\nclass StartButton extends React.Component {\n  onStartButtonClick = () => {\n    this.props.onStartButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onStartButtonClick} className=\"btn btn-primary m-2\">Start</button>;\n  }\n}\n\nexport default StartButton;\n","import React from \"react\";\nimport BackButton from \"../utility_components/BackButton\";\nimport ClearButton from \"../utility_components/ClearButton\";\nimport StartButton from \"../utility_components/StartButton\";\n\nclass NavBar extends React.Component{\n    onBackButtonClick = () => {\n        this.props.onBackButtonClick();\n    }\n    onClearButtonClick = () => {\n        this.props.onClearButtonClick();\n    }\n    onStartButtonClick = () => {\n        this.props.onStartButtonClick();\n    }\n    render(){\n        if(this.props.stage === 0){\n            return (\n                <div>\n                    <h2>MST - Minimum Spanning Tree</h2>\n                   <span className=\"fs-5\">Choose the points</span> \n                    <StartButton onStartButtonClick={this.onStartButtonClick}/>\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n                </div>\n\n            );\n        }\n        else if(this.props.stage === 1){\n            return (\n                <div>\n                    <h2>MST - Minimum Spanning Tree</h2>\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default NavBar;","export function initializePopulation(population, order, populationSize) {\n  for (let i = 0; i < populationSize; i++) {\n    population[i] = shuffle(order);\n  }\n}\n\nfunction shuffle(order) {\n  let array = order.slice();\n  array.sort(() => Math.random() - 0.5);\n  return array;\n}\n\nexport function calcFitness(points, population, fitness) {\n  for (let i = 0; i < population.length; i++) {\n    let d = calcDist(points, population[i]);\n    fitness[i] = 1 / (d + 0.1);\n  }\n  normalizeFitness(fitness);\n}\n\nfunction normalizeFitness(fitness) {\n  let totalFitness = 0;\n  for (let i = 0; i < fitness.length; i++) {\n    totalFitness += fitness[i];\n  }\n  for (let i = 0; i < fitness.length; i++) {\n    fitness[i] = fitness[i] / totalFitness;\n  }\n}\n\nfunction calcDist(points, order) {\n  let sum = 0;\n  for (let i = 1; i < order.length; i++) {\n    let x1 = points[order[i]].x;\n    let y1 = points[order[i]].y;\n    let x2 = points[order[i - 1]].x;\n    let y2 = points[order[i - 1]].y;\n    let x = x1 - x2;\n    let y = y1 - y2;\n    let d = Math.sqrt(x * x + y * y);\n    sum += d;\n  }\n  return sum;\n}\n\nexport function getCurrentBest(fitness) {\n  let index = -1;\n  let best = -1;\n  for (let i = 0; i < fitness.length; i++) {\n    if (fitness[i] > best) {\n      best = fitness[i];\n      index = i;\n    }\n  }\n  return index;\n}\n\nexport function nextGeneration(population, fitness) {\n  let newPopulation = [];\n  for (let i = 0; i < population.length; i++) {\n    let order1 = getOne(population, fitness);\n    let order2 = getOne(population, fitness);\n    let newOrder = crossOver(order1, order2);\n    newOrder = mutate(newOrder, 0.01);\n    newPopulation.push(newOrder);\n  }\n  return newPopulation;\n}\n\nfunction getOne(list, prob) {\n  var index = 0;\n  var r = Math.random(1);\n\n  while (r > 0) {\n    r = r - prob[index];\n    index++;\n  }\n  index--;\n  return list[index].slice();\n}\n\nfunction crossOver(order1, order2) {\n  var start = Math.floor(Math.random(1) * order1.length);\n  var end = Math.floor(\n    Math.random(1) * (order1.length - (start + 1) + 1) + start + 1\n  );\n  var temp = order1.slice(start, end);\n  let newOrder = [];\n  for (let i = 0; i < order1.length; i++) {\n    newOrder[i] = Infinity;\n  }\n  for (let i = start; i < end; i++) {\n    newOrder[i] = order1[i];\n  }\n  let j = 0;\n  for (let i = 0; i < order2.length; i++) {\n    var idx = order2[i];\n    if (j === start) j = end;\n    if (!temp.includes(idx)) {\n      newOrder[j++] = idx;\n    }\n  }\n  return newOrder;\n}\n\nfunction mutate(order, mutationRate) {\n  if (Math.random(1) < mutationRate) {\n    var indexA = Math.floor(Math.random(1) * order.length);\n    var indexB = (indexA + 1) % order.length;\n    order = swap(order, indexA, indexB);\n  }\n  return order;\n}\n\nfunction swap(order, i, j) {\n  let temp = order[i];\n  order[i] = order[j];\n  order[j] = temp;\n  return order;\n}\n","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Point from \"./Point\";\nimport NavBar from \"./NavBar\";\nimport {initializePopulation} from \"./GeneticAlgo\";\nimport {calcFitness} from \"./GeneticAlgo\";\nimport {getCurrentBest} from \"./GeneticAlgo\";\nimport {nextGeneration} from \"./GeneticAlgo\";\n\nlet points = [];\nlet width;\nlet height;\nlet bestFitness = -1;\nlet bestPath = [];\nlet order = [];\nlet complete = false;\nlet flag = false;\nlet population = [];\nlet fitness = [];\nlet populationSize = 1000;\nlet xyz;\n\n\n\nclass TSP extends React.Component {\n  state = { stage: 0 };\n\n  componentDidUpdate = () => {\n    initializePopulation(population, order, populationSize);\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78).parent(parent);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    let prevWidth = p5.width;\n    let prevHeight = p5.height;\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78);\n    this.initializeCanvas(p5);\n    for(let i = 0 ; i < points.length ; i++){\n      points[i].x = (p5.width * points[i].x) / prevWidth;\n      points[i].y = (p5.height * points[i].y) / prevHeight;\n    }\n  }\n\n  initializeCanvas = (p5) => {\n    width = p5.windowWidth*0.95;\n    height = p5.windowHeight * 0.78;\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n  }\n\n  draw = (p5) => {\n    if (!complete) {\n      p5.background(0);\n      if (this.state.stage === 0) {\n        p5.noStroke();\n        p5.fill(255);\n        p5.noCursor();\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\n      }\n      this.showPoints(p5);\n      if (this.state.stage === 1) {\n        calcFitness(points, population, fitness);\n        let currentBestIndex= getCurrentBest(fitness);\n        let currentBestFitness = fitness[currentBestIndex];\n        let currentBestPath = population[currentBestIndex];\n        this.showLines(currentBestPath, p5, 255, 255, 255, 0.5);\n        if (currentBestFitness > bestFitness) {\n          bestFitness = currentBestFitness;\n          bestPath = currentBestPath;\n        }\n        this.showLines(bestPath, p5, 255, 0, 255, 6);\n        population = nextGeneration(population, fitness);\n      }\n    } else if (!flag) {\n        this.showFinalPath(p5);\n    }\n  };\n\n  showFinalPath = (p5) => {\n    p5.background(0);\n    this.showPoints(p5);\n    this.showLines(bestPath, p5, 255, 0, 255, 6);\n    flag = true;\n  };\n\n  calcPathDistance = (p5) => {\n    let dist = 0;\n    for (let i = 1; i < order.length; i++) {\n      dist += p5.dist(\n        points[order[i]].x,\n        points[order[i]].y,\n        points[order[i - 1]].x,\n        points[order[i - 1]].y\n      );\n    }\n    return dist;\n  };\n\n  swap(array, i, j) {\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  showLines = (order, p5, r, g, b, strokeWeight) => {\n    p5.beginShape();\n    p5.stroke(r, g, b);\n    p5.strokeWeight(strokeWeight);\n    p5.noFill();\n    for (let i = 0; i < order.length; i++) {\n      p5.vertex(points[order[i]].x, points[order[i]].y);\n    }\n    p5.endShape();\n  };\n\n  showPoints = (p5) => {\n    for (let i = 0; i < points.length; i++) {\n      p5.fill(points[i].r, points[i].g, points[i].b);\n      p5.ellipse(points[i].x, points[i].y, 25, 25);\n    }\n  };\n\n  mousePressed = (e) => {\n    if (this.state.stage === 0) {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      if (x > 0 && x < width && y > 0 && y < height) {\n        points.push(new Point(x, y));\n        console.log(x, y);\n      }\n    }\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    this.setState({ stage: 0 });\n  };\n\n  cleaning = () => {\n    bestFitness = -1;\n    bestPath = [];\n    points = [];\n    order = [];\n    complete = false;\n  };\n\n  onStartButtonClick = () => {\n    order = [];\n    for (let i = 0; i < points.length; i++) {\n      order.push(i);\n    }\n    this.setState({ stage: 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mt-3\">\n        <NavBar\n          stage={this.state.stage}\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onStartButtonClick={this.onStartButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized = {this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TSP;","import React from 'react'\n\nimport Dijkstra from \"./dijkstra/Dijkstra\";\nimport BackTracking from \"./backtracking/BackTracking\";\nimport AStar from \"./astar/AStar\";\nimport Sorting from \"./sorting/Sorting\";\nimport LinearSearch from \"./linearsearch/LinearSearch\";\nimport BinarySearch from \"./binarysearch/BinarySearch\";\nimport TSP from \"./tsp/TSP\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  state = { option: 0 };\n\n  onBackButtonClick = () => {\n    this.setState({ option: 0 });\n  };\n\n  render() {\n    if (this.state.option === 0) {\n      return (\n        <div className=\"container mt-3\">\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 1 });\n            }}\n          >\n            Dijkstra\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 2 });\n            }}\n          >\n            Back Tracking\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 3 });\n            }}\n          >\n            A*\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 4 });\n            }}\n          >\n            Sorting\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 5 });\n            }}\n          >\n            Linear Search\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 6 });\n            }}\n          >\n            Binary Search\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 7 });\n            }}\n          >\n            Minimum Spanning Tree\n          </button>\n        </div>\n      );\n    } else if (this.state.option === 1) {\n      return <Dijkstra onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 2) {\n      return <BackTracking onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 3) {\n      return <AStar onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 4) {\n      return <Sorting onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 5) {\n      return <LinearSearch onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 6) {\n      return <BinarySearch onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 7) {\n      return <TSP onBackButtonClick={this.onBackButtonClick} />;\n    }\n\n\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}